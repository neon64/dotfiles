#!/bin/bash

function link_code_configs {
    if [[ -d ~/.config/Code\ -\ OSS/ ]]; then
        echo "Already exists, trashing old config"
        trash ~/.config/Code\ -\ OSS
    fi
    ln -s ~/.config/Code ~/.config/Code\ -\ OSS
}

function install_fish_plugins {
    header "Installing fisher"
    curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs https://git.io/fisher

    header "Using fisher to install plugins"
    fish -c 'fisher update'

    header "Done"
}

function symlink_platform_specific {
    case $OS in
         'Linux')
              ln -sfn ~/.config/git/config-linux ~/.config/git/config-platform-specific;
              ln -sfn ~/.xinitrc-linux ~/.xinitrc;
              ;;
         'Darwin')
              ln -sfn ~/.config/git/config-macos ~/.config/git-platform-specific;
              ln -sfn ~/.xinitrc-macos ~/.xinitrc;
              ln -sfn ~/.config/Code/User/settings.json ~/Library/Application\ Support/Code/User/settings.json;
              ;;
         *)
              warn "Unknown OS '$OS'"
    esac
    header "Done"
}

function set_dotf_ignore_untracked {
    .config/bin/dotf config --local status.showUntrackedFiles no && header "Done"
}

function set_color_schemes {
    ~/.config/bin/theme
}

function set_fish_as_default_shell {
    chsh -s $(which fish)
}

function install_user {
    confirm "Install fish plugins using \`fisher\`?" && install_fish_plugins
    confirm "Choose a color scheme?" && set_color_schemes
    confirm "Symlink platform-specific dotfiles?" && symlink_platform_specific
    confirm "Symlink 'Code - OSS' config to normal VS Code config?" && link_code_configs
    confirm "Set \`dotf\` to ignore untracked files?" && set_dotf_ignore_untracked
    confirm "Set \`fish\` as default shell?" && set_fish_as_default_shell
}
