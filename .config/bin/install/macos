#!/bin/bash

# load the platform-independent definitions & functions
source "`dirname $0`/definitions"
# load the platform-independent installation steps
source "`dirname $0`/common"

# installs the fish shell and everything else required to work with these dotfiles
base_shell_pkgs=(
    fish # shell of choice
    neovim # text editor - either use because its awesome, or as console backup
    tmux # terminal multiplexer, provides multiple concurrent panes whilst running system updates using the `up` script
    lsd # file listing in Rust
    bat # cat clone with extras (also just happens to be written in Rust)
    git # version control
    fzf # fuzzy file finder
    fd # nice alternative to `find`, written in Rust, and used in our fzf config
    highlight # syntax highlighting when previewing documents
)

function install_group {
    name=$1
    shift
    confirm " - \`$name\`?" && brew install "$@"
}

section "1" "2" "system-level configuration"

function install_pkgs {
        install_group base_shell_pkgs "${base_shell_pkgs[@]}"
}

function update_pkgs {
       brew upgrade
}

if $FRESH_INSTALL; then
    echo ""
    confirm "Install packages through Homebrew?" && install_pkgs
    echo ""
else
    echo ""
    confirm "Update packages through Homebrew?" && update_pkgs
    echo ""
fi

section "2" "2" "user-level configuration:"

install_common

echo ""

if $FRESH_INSTALL; then
    header "Congratulations, installation completed!"
else
    header "System updated successfully"
fi

exit 0
