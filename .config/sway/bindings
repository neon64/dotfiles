# use super as the modifier key -
# warning - on most keyboards nothing maps to super by default so you will
# be unable to exit or launch anything!
# Thus, we map the caps-lock key to super by default
set $mod Mod4

# preferred terminal emulator
set $term alacritty
set $window_switcher wofi
set $web_search rofi -lines 10 -padding 0 -show search -modi search:~/.config/wofi/web_search.py -i -p "Search: "

# movement keys
set $up l
set $down k
set $left j
set $right semicolon

set $laptop_screen eDP-1
set $sleep systemctl suspend
set $notify notify-send -t 5000

#
# Basics:
#

# close laptop lid
# bindswitch --reload --locked lid:on exec bash -c '[ $(swaymsg -t get_outputs | grep name | wc -l) == 1 ] && ($sleep) || (swaymsg output $laptop_screen disable && $notify "Clamshell mode" "Laptop screen off")'
# bindswitch --reload --locked lid:off output $laptop_screen enable

# the $term variable is expanded at runtime
bindsym $mod+Return exec $$term
bindsym $mod+x exec alacritty --title "Floating Terminal"


# bindsym $mod+f exec firefox --new-window
bindsym $mod+f exec firefox

# kill focused window
bindsym $mod+q kill
bindsym button3 kill

# start your launcher
bindsym $mod+d exec $window_switcher
# bindsym $mod+g exec $web_search
bindsym $mod+s exec swaymsg [app_id="org.gnome.Nautilus"] focus || nautilus

bindsym $mod+shift+s sticky toggle; exec notify-send -t 1000 "toggled sticky"
# bindsym $mod+shift+u sticky disable; exec notify-send -t 1000 "removed sticky"

# Toggle control center
bindsym $mod+shift+n exec swaync-client -t -sw

# bindsym $mod+d exec alacritty --title "Command Launcher" --config-file ~/.config/alacritty/alacritty_big.yml -e ~/.config/bin/launch_util

# Drag floating windows by holding down $mod and left mouse button. Resize
# them with right mouse button + $mod. Despite the name, also works for
# non-floating windows. Change normal to inverse to use left mouse button
# for resizing and right mouse button for dragging.
floating_modifier $mod normal

# reload the configuration file
bindsym $mod+Shift+c reload

# * Print Scr for whole screen
# * Alt + Print Scr for a focused window
# * Shift + Print Scr for a selected region
#
# Save screenshots to $SCREENSHOTS folder.
# The default value is XDG_PICTURES_DIR, see
# https://wiki.archlinux.org/index.php/XDG_user_directories
bindsym Print exec shotman output
bindsym Mod1+Print exec shotman window
bindsym Shift+Print exec shotman area

# exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec ~/.config/nwg-launchers/nwgbar/run.sh

#
# Moving around
#
# Move your focus around using the home row
bindsym $mod+$left focus left
bindsym $mod+$right focus right
bindsym $mod+$up focus up
bindsym $mod+$down focus down

bindsym ctrl+1 focus tab 0
bindsym ctrl+2 focus tab 1
bindsym ctrl+3 focus tab 2
bindsym ctrl+4 focus tab 3
bindsym ctrl+5 focus tab 4
bindsym ctrl+6 focus tab 5
bindsym ctrl+7 focus tab 6
bindsym ctrl+8 focus tab 7
bindsym ctrl+9 focus tab 8
bindsym ctrl+0 focus tab 9
# bindsym alt+1 focus tab 0
# bindsym alt+2 focus tab 1
# bindsym alt+3 focus tab 2
# bindsym alt+4 focus tab 3
# bindsym alt+5 focus tab 4
# bindsym alt+6 focus tab 5
# bindsym alt+7 focus tab 6
# bindsym alt+8 focus tab 7
# bindsym alt+9 focus tab 8
# bindsym alt+0 focus tab 9
bindsym ctrl+tab focus tab next
bindsym ctrl+shift+tab focus tab prev

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

bindsym $mod+n move workspace to output up
bindsym $mod+m move workspace to output left

#
# Workspaces:
#

workspace 10
# switch to workspace
bindsym $mod+grave workspace 0
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# move focused container to workspace
bindsym $mod+Shift+grave move container to workspace 0
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+w layout tabbed
bindsym $mod+e layout stacking
bindsym $mod+r layout toggle split
# Make the current focus fullscreen
bindsym $mod+shift+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space exec env RUST_BACKTRACE=1 \
    $HOME/.local/share/cargo/bin/swayr switch-window >> /tmp/swayr.log 2>&1

bindsym $mod+Tab exec env RUST_BACKTRACE=1 \
    $HOME/.local/share/cargo/bin/swayr switch-to-urgent-or-lru-window >> /tmp/swayr.log 2>&1

bindsym $mod+t exec env RUST_BACKTRACE=1 \
    $HOME/.local/share/cargo/bin/swayr shuffle-tile-workspace exclude-floating >> /tmp/swayr.log 2>&1

# focus parent
bindsym $mod+a focus parent

# manipulate gaps settings
bindsym $mod+G gaps inner all plus 10;
bindsym $mod+Shift+G gaps inner all set 0; gaps outer all set 0;

#
# Special keys
#

# Volume
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
bindsym --locked XF86AudioRaiseVolume exec pamixer -u && pamixer -i 1 && pamixer --get-volume >> $SWAYSOCK.wob
bindsym --locked XF86AudioLowerVolume exec pamixer -u && pamixer -d 1 && pamixer --get-volume >> $SWAYSOCK.wob
bindsym --locked XF86AudioMute exec $HOME/.config/sway/toggle_mute.sh

# Media player
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioPrev exec playerctl previous
bindsym --locked XF86AudioNext exec playerctl next

# Brightness (a fade over 100ms)
bindsym --locked XF86MonBrightnessUp exec brillo -A 5 -u 100000 && brillo -G | awk '{print int($1)}' > $SWAYSOCK.wob
bindsym --locked XF86MonBrightnessDown exec brillo -U 5 -u 100000 && brillo -G | awk '{print int($1)}' > $SWAYSOCK.wob

# Sleep
bindsym $mod+u exec swaylock
exec swayidle -w timeout 600 '! is_in_vm && swaylock' timeout 700 '! is_in_vm && swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' before-sleep 'swaylock'

bindsym $mod+i exec killall -SIGUSR1 waybar

#
# Resize mode:
#

bindsym $mod+shift+r mode "resize"

mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j         resize shrink width 10px
    bindsym k         resize grow height 10px
    bindsym l         resize shrink height 10px
    bindsym semicolon resize grow width 10px

    # same bindings, but for the arrow keys
    bindsym Left        resize shrink width 10px
    bindsym Down        resize grow height 10px
    bindsym Up          resize shrink height 10px
    bindsym Right       resize grow width 10px

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+equal scratchpad show
